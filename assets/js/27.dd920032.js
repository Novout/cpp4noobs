(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{411:function(a,s,e){"use strict";e.r(s);var t=e(42),o=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"_3-primeiro-hello-world"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-primeiro-hello-world"}},[a._v("#")]),a._v(" 3 - Primeiro Hello World")]),a._v(" "),e("p",[a._v("Vamos começar com o primeiro Hello World!")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("1 : Crie um projeto em sua IDE escolhida")])]),a._v(" "),e("li",[e("p",[a._v("2 : Digite o seguinte código:")])])]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("<iostream>")])]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello World"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("ul",[e("li",[e("p",[a._v("3 : Compile e execute")])]),a._v(" "),e("li",[e("p",[a._v("Pronto! Você fez o seu primeiro Hello World!")])]),a._v(" "),e("li",[e("p",[a._v("Mas,como?")])]),a._v(" "),e("li",[e("p",[a._v("A seguir, iremos explicar todos os conceitos por trás deste "),e("code",[a._v("Hello World")]),a._v(":")])])]),a._v(" "),e("h3",{attrs:{id:"sequencia"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sequencia"}},[a._v("#")]),a._v(" Sequência")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("O procedimento de código é de cima para baixo e com conteúdos em sequência, separados por "),e("code",[a._v(";")])])]),a._v(" "),e("li",[e("p",[a._v("Será melhor explicado na seção de variáveis.")])])]),a._v(" "),e("h3",{attrs:{id:"bibliotecas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bibliotecas"}},[a._v("#")]),a._v(" Bibliotecas")]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("<iostream>")])]),a._v("\n")])])]),e("ul",[e("li",[e("p",[a._v("Uma biblioteca padrão é uma coleção de classes, funções e variáveis escritas na própria linguagem para facilitar o desenvolvimento de aplicações.")])]),a._v(" "),e("li",[e("p",[a._v("Utilizando "),e("code",[a._v("#include <nome_da_biblioteca>")]),a._v(" é possível chamar bibliotecas.")])]),a._v(" "),e("li",[e("p",[a._v("Em termos simples, todo o conteúdo que está na localização da biblioteca é copiado e colado em apenas uma linha de código no seu projeto.")])]),a._v(" "),e("li",[e("p",[a._v("Bibliotecas são incluidas sempre no começo do arquivo.")])])]),a._v(" "),e("h1",{attrs:{id:"funcao-main"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#funcao-main"}},[a._v("#")]),a._v(" Função main")]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("ul",[e("li",[e("p",[a._v("Cada programa C++ tem uma função principal que deve ser nomeada "),e("strong",[a._v("main")]),a._v(".")])]),a._v(" "),e("li",[e("p",[a._v("Todo o procedimento do seu código inicia-se nesta função.")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("{}")]),a._v(" é o que chamamos de "),e("strong",[a._v("escopo")]),a._v(", o que for declarado desde seu início "),e("code",[a._v("{")]),a._v(" até seu fim "),e("code",[a._v("}")]),a._v(" irá existir apenas dentro dele.")])]),a._v(" "),e("li",[e("p",[a._v("Como "),e("code",[a._v("main")]),a._v(" é uma função, precisamos colocar "),e("code",[a._v("()")]),a._v(" após a declaração de seu nome.")])]),a._v(" "),e("li",[e("p",[a._v("Os conceitos sobre o que é uma função será explicado na seção de Funções, por enquanto não se preocupe com isso.")])]),a._v(" "),e("li",[e("p",[a._v("Vamos aprender a como manipular o nosso conteúdo para que ele continue existindo mesmo fora do escopo futuramente.")])])]),a._v(" "),e("h1",{attrs:{id:"saida-de-dados-e-biblioteca-iostream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#saida-de-dados-e-biblioteca-iostream"}},[a._v("#")]),a._v(" Saída de Dados e Biblioteca "),e("code",[a._v("<iostream>")])]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[a._v("    std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello World"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("ul",[e("li",[e("p",[e("code",[a._v("std::cout")]),a._v(" (out de saída) pertence a biblioteca "),e("code",[a._v("<iostream>")]),a._v(" significa que queremos exibir algo na tela, ou seja, uma saída de algum dado que passarmos para o "),e("code",[a._v("std::cout")]),a._v(".")])]),a._v(" "),e("li",[e("p",[a._v("O operador << significa que estamos passando algo para 'a direção', no caso para o std::cout, sendo também um operador da "),e("code",[a._v("<iostream>")]),a._v(".")])]),a._v(" "),e("li",[e("p",[a._v('Para passarmos um conjunto de caracteres(chamado de string) precisamos colocar entre "",no caso a string '),e("code",[a._v("Hello World")]),a._v(".\nEspaços "),e("code",[a._v('" "')]),a._v(" também contam como caracteres.")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("std::endl")]),a._v(" também pertence a "),e("code",[a._v("<iostream>")]),a._v(" que executa a quebra de linha,ou seja, sempre quando chamada irá mandar todo o conteúdo sucessor para uma nova linha.")])]),a._v(" "),e("li",[e("p",[a._v("Todo o final de linha de código precisamos colocar "),e("code",[a._v(";")]),a._v(" para indicarmos pro compilador que pode executar o proximo conteúdo.")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("std::")]),a._v(" é um espaço de nome para as bibliotecas padrões do C++, para acessarmos o seu conteúdo precisamos usar "),e("code",[a._v("std::")]),a._v(" e entrar neste espaço de nome reservado "),e("code",[a._v("std")]),a._v(", com "),e("code",[a._v("::")]),a._v(" indicando a entrada.")])])]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("<iostream>")])]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"A"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("p",[a._v("Irá ser exibido:")]),a._v(" "),e("p",[a._v("A")]),a._v(" "),e("p",[a._v("B")]),a._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[a._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("<iostream>")])]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    std"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"A"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("p",[a._v("Irá ser exibido:\nAB")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Algumas IDE's faz a quebra de linha automaticamente sem a necessidade do "),e("code",[a._v("std::endl")]),a._v(".")])]),a._v(" "),e("li",[e("p",[a._v("Todos os conceitos passado será utilizado ao longo do curso, então não se assuste que com a prática estes conceitos serão facilmente fixados.")])])])])}),[],!1,null,null,null);s.default=o.exports}}]);